1. preferences.xml
Add the following code

<?xml version="1.0" encoding="utf-8"?>
<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
    <CheckBoxPreference
        android:key="pref_remember_percent"
        android:title="@string/remember_percent_title"
        android:summary="@string/remember_percent_summary"
        android:defaultValue="true" />
    <ListPreference
        android:key="pref_rounding"
        android:title="@string/rounding_title"
        android:summary="@string/rounding_summary"
        android:dialogTitle="@string/rounding_title"
        android:entries="@array/rounding_keys"
        android:entryValues="@array/rounding_values"
        android:defaultValue="@string/rounding_default" />
    <EditTextPreference
        android:key="pref_name"
        android:title="@string/name_title"
        android:summary="@string/name_summary"
        android:defaultValue=""/>
</PreferenceScreen>
    
2. activity_main.xml
Add the following code

<!--Name EditTextPreference-->
<TextView
    android:id="@+id/nameLabel"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignBaseline="@+id/nameTextView"
    android:layout_alignBottom="@+id/nameTextView"
    android:padding="10dp"
    android:text="@string/name_label"
    android:textSize="20dp"
    android:textStyle="bold" />
<TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:id="@+id/nameTextView"
    android:layout_alignLeft="@+id/totalTextView"
    android:layout_alignRight="@+id/percentUpButton"
    android:layout_below="@+id/totalLabel"
    android:padding="5dp"
    android:text="@string/name"
    android:textSize="20sp"/>
    
3. strings.xml
<string name="title_activity_tip_calculator">Tip Calculator</string>

<string name="bill_amount_label">Bill Amount</string>
<string name="bill_amount"></string>

<string name="tip_percent_label">Percent</string>
<string name="tip_percent">15%</string>
<string name="increase">+</string>
<string name="decrease">-</string>

<string name="tip_amount_label">Tip</string>
<string name="tip_amount">$0.00</string>

<string name="total_amount_label">Total</string>
<string name="total_amount">$0.00</string>

<string name="menu_settings">Settings</string>
<string name="menu_about">About</string>

<string name="title_activity_settings">Settings</string>

<string name="remember_percent_title">Remember Tip Percent</string>
<string name="remember_percent_summary">Remembers the tip percent for the most recent calculation.</string>

<string name="rounding_title">Rounding?</string>
<string name="rounding_summary">Sets the rounding option for the calculation.</string>
<string-array name="rounding_keys">
    <item >None</item>
    <item >Tip</item>
    <item >Total</item>
</string-array>
<string-array name="rounding_values">
    <item >0</item>
    <item >1</item>
    <item >2</item>
</string-array>
<string name="rounding_default">0</string>

<string name="title_activity_about">About</string>
<string name="about">This version of the Tip Calculator app calculates all tips on the post-tax total for the bill.</string>

<string name="name_title">Name</string>
<string name="name_summary">Sets the full name of the user.</string>

<string name="name_label">Name</string>
<string name="name">Jane Doe</string>

4. MainActivity.java
Add the following code

package com.example.assignment7;

import java.text.NumberFormat;

import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.EditorInfo;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;

public class MainActivity extends Activity
        implements OnEditorActionListener, OnClickListener {

    // define variables for the widgets
    private EditText billAmountEditText;
    private TextView percentTextView;
    private Button   percentUpButton;
    private Button   percentDownButton;
    private TextView tipTextView;
    private TextView totalTextView;
    private TextView nameTextView;

    // define instance variables that should be saved
    private String billAmountString = "";
    private float tipPercent = .15f;

    // define rounding constants
    private final int ROUND_NONE = 0;
    private final int ROUND_TIP = 1;
    private final int ROUND_TOTAL = 2;

    // set up preferences
    private SharedPreferences prefs;
    private boolean rememberTipPercent = true;
    private int rounding = ROUND_NONE;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // get references to the widgets
        billAmountEditText = (EditText) findViewById(R.id.billAmountEditText);
        percentTextView = (TextView) findViewById(R.id.percentTextView);
        percentUpButton = (Button) findViewById(R.id.percentUpButton);
        percentDownButton = (Button) findViewById(R.id.percentDownButton);
        tipTextView = (TextView) findViewById(R.id.tipTextView);
        totalTextView = (TextView) findViewById(R.id.totalTextView);
        nameTextView = (TextView)findViewById(R.id.nameTextView);

        // set the listeners
        billAmountEditText.setOnEditorActionListener(this);
        percentUpButton.setOnClickListener(this);
        percentDownButton.setOnClickListener(this);

        // set the default values for the preferences
        PreferenceManager.setDefaultValues(this, R.xml.preferences, false);

        // get default SharedPreferences object
        prefs = PreferenceManager.getDefaultSharedPreferences(this);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public void onPause() {
        // save the instance variables
        Editor editor = prefs.edit();
        editor.putString("billAmountString", billAmountString);
        editor.putFloat("tipPercent", tipPercent);
        editor.commit();

        super.onPause();
    }

    @Override
    public void onResume() {
        super.onResume();

        // get preferences
        rememberTipPercent = prefs.getBoolean("pref_remember_percent", true);
        rounding = Integer.parseInt(prefs.getString("pref_rounding", "0"));

        //get name from preferences and display it
        String name = prefs.getString("pref_name", "");
        nameTextView.setText(name);

        // get the instance variables
        billAmountString = prefs.getString("billAmountString", "");
        if (rememberTipPercent) {
            tipPercent = prefs.getFloat("tipPercent", 0.15f);
        } else {
            tipPercent = 0.15f;
        }

        // set the bill amount on its widget
        billAmountEditText.setText(billAmountString);

        // calculate and display
        calculateAndDisplay();
    }

    public void calculateAndDisplay() {
        // get the bill amount
        billAmountString = billAmountEditText.getText().toString();
        float billAmount;
        if (billAmountString.equals("")) {
            billAmount = 0;
        }
        else {
            billAmount = Float.parseFloat(billAmountString);
        }

        // calculate tip and total
        float tipAmount = 0;
        float totalAmount = 0;
        float tipPercentToDisplay = 0;
        if (rounding == ROUND_NONE) {
            tipAmount = billAmount * tipPercent;
            totalAmount = billAmount + tipAmount;
            tipPercentToDisplay = tipPercent;
        }
        else if (rounding == ROUND_TIP) {
            tipAmount = StrictMath.round(billAmount * tipPercent);
            totalAmount = billAmount + tipAmount;
            tipPercentToDisplay = tipAmount / billAmount;
        }
        else if (rounding == ROUND_TOTAL) {
            float tipNotRounded = billAmount * tipPercent;
            totalAmount = StrictMath.round(billAmount + tipNotRounded);
            tipAmount = totalAmount - billAmount;
            tipPercentToDisplay = tipAmount / billAmount;
        }

        // display the other results with formatting
        NumberFormat currency = NumberFormat.getCurrencyInstance();
        tipTextView.setText(currency.format(tipAmount));
        totalTextView.setText(currency.format(totalAmount));

        NumberFormat percent = NumberFormat.getPercentInstance();
        percentTextView.setText(percent.format(tipPercentToDisplay));
    }

    @Override
    public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
        int keyCode = -1;
        if (event != null) {
            keyCode = event.getKeyCode();
        }
        if (actionId == EditorInfo.IME_ACTION_DONE ||
                actionId == EditorInfo.IME_ACTION_UNSPECIFIED ||
                keyCode == KeyEvent.KEYCODE_DPAD_CENTER ||
                keyCode == KeyEvent.KEYCODE_ENTER) {
            calculateAndDisplay();
        }
        return false;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.percentDownButton:
                tipPercent = tipPercent - .01f;
                calculateAndDisplay();
                break;
            case R.id.percentUpButton:
                tipPercent = tipPercent + .01f;
                calculateAndDisplay();
                break;
        }
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.menu_settings:
                // Toast.makeText(this, "Settings", Toast.LENGTH_SHORT).show();
                startActivity(new Intent(getApplicationContext(), SettingsActivity.class));
                return true;
            case R.id.menu_about:
                // Toast.makeText(this, "About", Toast.LENGTH_SHORT).show();
                startActivity(new Intent(getApplicationContext(), AboutActivity.class));
                return true;

            default:
                return super.onOptionsItemSelected(item);
        }
    }
}
